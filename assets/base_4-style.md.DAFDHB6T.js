import{_ as i,c as a,a2 as n,o as e}from"./chunks/framework.D3xnaaT3.js";const p="/q-uniapp-docs/assets/4-4.CB7fDlZB.png",l="/q-uniapp-docs/assets/4-5.BOO5kTV6.png",y=JSON.parse('{"title":"样式篇","description":"","frontmatter":{},"headers":[],"relativePath":"base/4-style.md","filePath":"base/4-style.md","lastUpdated":1734704359000}'),h={name:"base/4-style.md"};function t(k,s,d,r,o,c){return e(),a("div",null,s[0]||(s[0]=[n('<h1 id="样式篇" tabindex="-1">样式篇 <a class="header-anchor" href="#样式篇" aria-label="Permalink to &quot;样式篇&quot;">​</a></h1><p>本篇主要介绍 <code>UnoCSS</code> 的使用，以及如何与 <code>设计稿尺寸</code> 对应。</p><h2 id="unocss" tabindex="-1">UnoCSS <a class="header-anchor" href="#unocss" aria-label="Permalink to &quot;UnoCSS&quot;">​</a></h2><p><a href="https://unocss.dev/" target="_blank" rel="noreferrer">UnoCSS</a> 是按需使用的原子 CSS 引擎，提供了良好的样式支持。</p><p>在 VSCode 中还可以预览，</p><blockquote><p>如果原子化 <code>UnoCSS</code> 没有预览效果，请安装 <code>VSCode</code> 插件 <code>antfu.unocss</code>。</p></blockquote><p>如果不记得原子类，可以查 <code>UnoCSS 的原子类</code>，<a href="https://unocss.dev/interactive/" target="_blank" rel="noreferrer">UnoCSS Interactive</a>，如下图 <img src="'+p+'" alt="alt text"></p><p>也可以查看 <code>tailwindcss</code> 的原子类，更加清晰明了，<a href="https://tailwindcss.com/" target="_blank" rel="noreferrer">链接 - tailwindcss</a>，如下图：</p><p><img src="'+l+`" alt="alt text"></p><h2 id="常用的原子类" tabindex="-1">常用的原子类 <a class="header-anchor" href="#常用的原子类" aria-label="Permalink to &quot;常用的原子类&quot;">​</a></h2><ul><li>宽高内外边距： <code>w-2</code>, <code>h-4</code>, <code>px-6</code>, <code>mt-8</code>等</li><li>前景色背景色：<code>text-green-400</code>, <code>bg-green-500</code></li><li>border: <code>border-2</code>, <code>border-solid</code>, <code>border-green-600</code>, <code>b-r-2</code> (注意 <code>border</code> = <code>border-1</code>，就是说边框 <code>1px</code> 时，一般简写为 <code>border</code> )</li><li>border-radius: <code>rounded-full</code>, <code>rounded-6</code>, <code>rounded-sm</code> (不是 <code>br-10</code>, 也不是 <code>b-r-10</code>)</li><li>line-height: <code>leading-10</code> (不是 <code>l-10</code>, 也不是 <code>lh-10</code>)</li><li>hover: <code>hover:text-green-200</code>, <code>hover:bg-green-300</code>, <code>hover:border-dashed</code></li><li>flex: <code>flex</code>, <code>items-center</code>, <code>justify-center</code>, <code>flex-1</code></li></ul><h2 id="unocss-配置" tabindex="-1"><code>UnoCSS</code> 配置 <a class="header-anchor" href="#unocss-配置" aria-label="Permalink to &quot;\`UnoCSS\` 配置&quot;">​</a></h2><p>下面内容选读：</p><details class="details custom-block"><summary>Details</summary><p><code>unocss.config.ts</code> 文件内容如下：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// uno.config.ts</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">  type</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> Preset</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  defineConfig</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  presetUno</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  presetAttributify</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  presetIcons</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  transformerDirectives</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  transformerVariantGroup</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">unocss</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> presetApplet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> presetRemRpx</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> transformerAttributify</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">unocss-applet</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// @see https://unocss.dev/presets/legacy-compat</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> presetLegacyCompat</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">@unocss/preset-legacy-compat</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">isMp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> process</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">env</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">?.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">UNI_PLATFORM</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">?.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">startsWith</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">mp</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ?? </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const </span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">presets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">Preset</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[] =</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> []</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">if</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">isMp</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 使用小程序预设</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  presets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">presetApplet</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> presetRemRpx</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">())</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> else</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  presets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">push</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 非小程序用官方预设</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    presetUno</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 支持css class属性化</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    presetAttributify</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  )</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">export</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> default</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> defineConfig</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  presets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: [</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ...</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">presets</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 支持图标，需要搭配图标库，eg: @iconify-json/carbon, 使用 \`&lt;button class=&quot;i-carbon-sun dark:i-carbon-moon&quot; /&gt;\`</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    presetIcons</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      scale</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1.2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      warn</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      extraProperties</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        display</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">inline-block</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">        &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">vertical-align</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">middle</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      },</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }),</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 将颜色函数 (rgb()和hsl()) 从空格分隔转换为逗号分隔，更好的兼容性app端，example：</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // \`rgb(255 0 0)\` -&gt; \`rgb(255, 0, 0)\`</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // \`rgba(255 0 0 / 0.5)\` -&gt; \`rgba(255, 0, 0, 0.5)\`</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    presetLegacyCompat</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      commaStyleColorFunction</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Preset</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ],</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  /**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   * 自定义快捷语句</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   * </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">see</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> https://github.com/unocss/unocss#shortcuts</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   */</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  shortcuts</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: [[</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">center</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">, </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">flex justify-center items-center</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]],</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  transformers</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: [</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 启用 @apply 功能</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    transformerDirectives</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 启用 () 分组功能</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // 支持css class组合，eg: \`&lt;div class=&quot;hover:(bg-gray-400 font-medium) font-(light mono)&quot;&gt;测试 unocss&lt;/div&gt;\`</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    transformerVariantGroup</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(),</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">    // Don&#39;t change the following order</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    transformerAttributify</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">({</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">      // 解决与第三方框架样式冲突问题</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      prefixedOnly</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">      prefix</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">fg</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }),</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ],</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">  rules</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: [</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    [</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">      &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">p-safe</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      {</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">        padding</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">          &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left)</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">      },</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    ],</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    [</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">pt-safe</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">, { </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">padding-top</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">env(safe-area-inset-top)</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }],</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    [</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">pb-safe</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">, { </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">padding-bottom</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">env(safe-area-inset-bottom)</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }],</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ],</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * 最终这一套组合下来会得到：</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * mp 里面：mt-4 =&gt; margin-top: 32rpx  == 16px</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * h5 里面：mt-4 =&gt; margin-top: 1rem == 16px</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> *</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * 另外，我们还可以推算出 UnoCSS 单位与设计稿差别4倍。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * 375 * 4 = 1500，把设计稿设置为1500，那么设计稿里多少px，unocss就写多少述职。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * 举个例子，设计稿显示某元素宽度100px，就写w-100即可。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> *</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * 如果是传统方式写样式，则推荐设计稿设置为 750，这样设计稿1px，代码写1rpx。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * rpx是响应式的，可以让不同设备的屏幕显示效果保持一致。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> */</span></span></code></pre></div><h3 id="unocss-presets" tabindex="-1">UnoCSS presets <a class="header-anchor" href="#unocss-presets" aria-label="Permalink to &quot;UnoCSS presets&quot;">​</a></h3><p>主要有 <code>4</code>个：</p><ul><li><code>presetUno</code> —— <code>UnoCSS</code> 默认的预设，<code>H5端</code> 适用，<code>非H5端</code> 不支持，代码已经作区别处理。</li><li><code>presetApplet</code> 小程序预设，因为默认 <code>Unocss 预设</code> 是针对 <code>WEB</code> 的，如果不加以处理，会报错，比如小程序不支持 <code>*</code>， 没有 <code>body</code> 等。该预设同样对 <code>APP</code> 生效。</li><li><code>presetIcons</code>，专门使用 <code>UnoCSS Icons</code> 的，需要搭配图标库使用，eg: <code>@iconify-json/carbon</code>, 代码编写如 <code>&lt;button class=&quot;i-carbon-sun dark:i-carbon-moon&quot; /&gt;</code></li><li><code>presetLegacyCompat</code> 针对低端 <code>APP</code> 不认识新的函数颜色的兼容性预设，可以将颜色函数 <code>rgb()和hsl()</code> 里面空格分隔转换为逗号分隔，更好的兼容性<code>APP</code>端，example： <blockquote><p><code>rgb(255 0 0)</code> -&gt; <code>rgb(255, 0, 0)</code></p><p><code>rgba(255 0 0 / 0.5)</code> -&gt; <code>rgba(255, 0, 0, 0.5)</code></p></blockquote></li></ul><h3 id="unocss-shortcuts" tabindex="-1">UnoCSS shortcuts <a class="header-anchor" href="#unocss-shortcuts" aria-label="Permalink to &quot;UnoCSS shortcuts&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">* 自定义快捷语句</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">* </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">@</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">see</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> https://github.com/unocss/unocss#shortcuts</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">*/</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">shortcuts</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [[</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">center</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">flex justify-center items-center</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]],</span></span></code></pre></div><p>可以编写一些常用的快捷类名，如上表示 <code>center</code> 就是 <code>flex justify-center items-center</code> 的组合，合理的添加快捷类名可以加快样式编写。</p></details><h2 id="设计稿尺寸" tabindex="-1">设计稿尺寸 <a class="header-anchor" href="#设计稿尺寸" aria-label="Permalink to &quot;设计稿尺寸&quot;">​</a></h2><p>不同的编写方式，需要设置不同的设计稿尺寸，请看下文：</p><h3 id="_1-传统编写方式" tabindex="-1">1. 传统编写方式 <a class="header-anchor" href="#_1-传统编写方式" aria-label="Permalink to &quot;1. 传统编写方式&quot;">​</a></h3><p>如果有设计稿，通常使用传统的编写 <code>CSS</code> 的方式，里面的对应尺寸规律如下。以蓝湖为例，假如设计稿宽度为 <code>750px</code>，则直接复制样式代码到 css 代码，同时把 <code>px</code> 批量替换为 <code>rpx</code> 即可。</p><p>如果设计稿不是 <code>750px</code> 可以调整蓝湖的设置，让设计稿宽度为 <code>750px</code>。</p><blockquote><p>下面为一段辅助说明文案，从 <code>uniapp</code> 官网搬运而来。</p></blockquote><p><code>rpx</code> 是相对于基准宽度的单位，可以根据屏幕宽度进行自适应。<code>uni-app</code> 规定屏幕基准宽度 <code>750rpx</code>。</p><p>开发者可以通过设计稿基准宽度计算页面元素 <code>rpx</code> 值，设计稿 <code>1px</code> 与框架样式 <code>1rpx</code> 转换公式如下：</p><p><code>设计稿 1px / 设计稿基准宽度 = 框架样式 1rpx / 750rpx</code></p><p>换言之，页面元素宽度在 <code>uni-app</code> 中的宽度计算公式：</p><p><code>750 * 元素在设计稿中的宽度 / 设计稿基准宽度</code></p><p>举例说明：</p><p>若设计稿宽度为 <code>750px</code>，元素 <code>A</code> 在设计稿上的宽度为 <code>100px</code>，那么元素 <code>A</code> 在 <code>uni-app</code> 里面的宽度应该设为：<code>750 * 100 / 750</code>，结果为：<code>100rpx</code>。</p><p>若设计稿宽度为 <code>640px</code>，元素 <code>A</code> 在设计稿上的宽度为 <code>100px</code>，那么元素 <code>A</code> 在 <code>uni-app</code> 里面的宽度应该设为：<code>750 * 100 / 640</code>，结果为：<code>117rpx</code>。</p><p>若设计稿宽度为 <code>375px</code>，元素 <code>B</code> 在设计稿上的宽度为 <code>200px</code>，那么元素 <code>B</code> 在 <code>uni-app</code> 里面的宽度应该设为：<code>750 * 200 / 375</code>，结果为：<code>400rpx</code>。</p><h3 id="_2-unocss-编写方式" tabindex="-1">2. UnoCSS 编写方式 <a class="header-anchor" href="#_2-unocss-编写方式" aria-label="Permalink to &quot;2. UnoCSS 编写方式&quot;">​</a></h3><p>经过上一节的 <code>unocss.config.ts</code> 配置，可以得到下面的组合：</p><blockquote><p>mp 里面：mt-4 =&gt; margin-top: 32rpx == 16px</p><p>h5 里面：mt-4 =&gt; margin-top: 1rem == 16px</p></blockquote><p>我们还是把设计稿设置为 <code>750</code>，设计稿上多少 <code>px</code> 的元素，写成多少 <code>rpx</code> 即可。</p><p>元素 <code>A</code> 在设计稿上的宽度为 <code>100px</code>，则写 <code>w-100rpx</code> 即可。</p><p>就是把 <code>传统编写方式</code> 中写在 <code>css</code> 中的样式搬到了 <code>UnoCSS</code> 中。</p><p>如果要想用 <code>w-100</code> 这种方式，需要做额外的处理（待验证）：</p><details class="details custom-block"><summary>Details</summary><p>太忙了，有空再写吧。</p></details><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>本文主要介绍了 <code>UnoCSS</code> 的使用，以及 <code>unocss.config.ts</code> 中的一些配置项。</p><p>同时说明了设计稿在两种编写方式下的宽度的设置，分别为 <code>750</code> 和 <code>1500</code>.</p><p>最后说明一下，<code>原子化CSS</code> 和 <code>传统方式</code> 两者不是互斥的，他们是互补的，合适的地方使用合适的方式。</p>`,41)]))}const A=i(h,[["render",t]]);export{y as __pageData,A as default};
